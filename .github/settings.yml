# These settings are synced to GitHub by https://probot.github.io/apps/settings/

repository:
# See https://docs.github.com/en/free-pro-team@latest/rest/repos/repos#update-a-repository for all available settings.

#
# General
#

  # The name of the repository.
  name: Utilities

  # A short description of the repository.
  description: The Utilities repository contains a collection of scripts and tools that should have been in PowerShell to start with.

  # A URL with more information about the repository.
  homepage: https://www.psmodule.io/Utilities

  # Either true to make the repository private or false to make it public. Default: false.
  # Note: You will get a 422 error if the organization restricts changing repository visibility to organization owners and a non-owner tries to change the value of private.
  # Default: false
  private: false

  # The visibility of the repository.
  # Can be one of: public, private
  visibility: public

  # Either true to make this repo available as a template repository or false to prevent it.
  # Template repositories let users generate new repositories with the same directory structure and files.
  # Default: false
  is_template: false

  # Enabling this setting will require contributors to sign off on commits made through GitHub‚Äôs web interface. Signing off is a way for contributors to affirm that their commit complies with the repository's terms, commonly the Developer Certificate of Origin (DCO).
  # Either true to require contributors to sign off on web-based commits, or false to not require contributors to sign off on web-based commits.
  # Default: false
  web_commit_signoff_required: false

#
# Default branch
#

  # Sets the default branch for this repository.
  default_branch: main

#
# Features
#

  # Wikis host documentation for your repository.
  # Either true to enable the wiki for this repository or false to disable it.
  # Default: true
  has_wiki: false

  # Issues integrate lightweight task tracking into your repository. Keep projects on track with issue labels and milestones, and reference them in commit messages.
  # Either true to enable issues for this repository or false to disable them.
  # Default: true
  has_issues: true

  # Either true to enable projects for this repository or false to disable them.
  # Default: true
  has_projects: true

#
# Pull Requests
#

  # Either true to allow merging pull requests with a merge commit, or false to prevent merging pull requests with merge commits.
  # Default: true
  allow_merge_commit: false

  # The default value for a merge commit title.
  # - PR_TITLE      - default to the pull request's title.
  # - MERGE_MESSAGE - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).
  # Can be one of: PR_TITLE, MERGE_MESSAGE
  merge_commit_title: null

  # The default value for a merge commit message.
  # - PR_TITLE - default to the pull request's title.
  # - PR_BODY - default to the pull request's body.
  # - BLANK - default to a blank commit message.
  # Can be one of: PR_BODY, PR_TITLE, BLANK
  merge_commit_message: null

  # Either true to allow squash-merging pull requests, or false to prevent squash-merging.
  # Default: true
  allow_squash_merge: true

  # The default value for a squash merge commit title:
  # - PR_TITLE           - default to the pull request's title.
  # - COMMIT_OR_PR_TITLE - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).
  # Can be one of: PR_TITLE, COMMIT_OR_PR_TITLE
  squash_merge_commit_title: PR_TITLE

  # The default value for a squash merge commit message:
  # - PR_BODY         - default to the pull request's body.
  # - COMMIT_MESSAGES - default to the branch's commit messages.
  # - BLANK           - default to a blank commit message.
  # Can be one of: PR_BODY, COMMIT_MESSAGES, BLANK
  squash_merge_commit_message: PR_BODY

  # Either true to allow rebase-merging pull requests, or false to prevent rebase-merging.
  # Default: true
  allow_rebase_merge: false

  # Whenever there are new changes available in the base branch, present an ‚Äúupdate branch‚Äù option in the pull request.
  # Either true to always allow a pull request head branch that is behind its base branch to be updated even if it is not required to be up to date before merging, or false otherwise.
  # Default: false
  allow_update_branch: true

  # Either true to allow auto-merge on pull requests, or false to disallow auto-merge.
  # Default: false
  allow_auto_merge: true

  # Either true to allow automatically deleting head branches when pull requests are merged, or false to prevent automatic deletion.
  # Default: false
  delete_branch_on_merge: true


#
# Danger Zone
#

  # Whether to archive this repository. false will unarchive a previously archived repository.
  # Default: false
  archived: false

  # Either true to allow private forks, or false to prevent private forks.
  # Default: false
  allow_forking: true

#
# Code security and analysis
#

  # Specify which security and analysis features to enable or disable for the repository.
  security_and_analysis: null

# Labels: define labels for Issues and Pull Requests
labels:
  - name: bug
    color: CC0000
    description: An issue with the system üêõ.

  - name: feature
    # If including a `#`, make sure to wrap it with quotes!
    color: '#336699'
    description: New functionality.

  - name: Help Wanted
    # Provide a new name to rename an existing label
    new_name: first-timers-only

# Milestones: define milestones for Issues and Pull Requests
milestones:
  - title: milestone-title
    description: milestone-description
    # The state of the milestone. Either `open` or `closed`
    state: open

# Collaborators: give specific users access to this repository.
# See https://docs.github.com/en/rest/reference/repos#add-a-repository-collaborator for available options
collaborators:
  - username: MariusStorhaug
    permission: admin
  # - username: hubot
  #   permission: pull

  # Note: `permission` is only valid on organization-owned repositories.
  # The permission to grant the collaborator. Can be one of:
  # * `pull` - can pull, but not push to or administer this repository.
  # * `push` - can pull and push, but not administer this repository.
  # * `admin` - can pull, push and administer this repository.
  # * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
  # * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.

# See https://docs.github.com/en/rest/reference/teams#add-or-update-team-repository-permissions for available options
teams:
  - name: module-maintainers
    # The permission to grant the team. Can be one of:
    # * `pull` - can pull, but not push to or administer this repository.
    # * `push` - can pull and push, but not administer this repository.
    # * `admin` - can pull, push and administer this repository.
    # * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
    # * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.
    permission: maintain

branches:
  - name: main
    # https://docs.github.com/en/rest/reference/repos#update-branch-protection
    # Branch Protection settings. Set to null to disable
    protection:
      # Required. Require at least one approving review on a pull request, before merging. Set to null to disable.
      required_pull_request_reviews:
        # The number of approvals required. (1-6)
        required_approving_review_count: 1
        # Dismiss approved reviews automatically when a new commit is pushed.
        dismiss_stale_reviews: true
        # Blocks merge until code owners have reviewed.
        require_code_owner_reviews: true
        # Specify which users and teams can dismiss pull request reviews. Pass an empty dismissal_restrictions object to disable. User and team dismissal_restrictions are only available for organization-owned repositories. Omit this parameter for personal repositories.
        dismissal_restrictions:
          users: []
          teams: []
      # Required. Require status checks to pass before merging. Set to null to disable
      required_status_checks:
        # Required. Require branches to be up to date before merging.
        strict: false
        # Required. The list of status checks to require in order to merge into this branch
        contexts: []
      # Required. Enforce all configured restrictions for administrators. Set to true to enforce required status checks for repository administrators. Set to null to disable.
      enforce_admins: true
      # Prevent merge commits from being pushed to matching branches
      required_linear_history: true
      # Required. Restrict who can push to this branch. Team and user restrictions are only available for organization-owned repositories. Set to null to disable.
      restrictions:
        apps: []
        users: []
        teams: []
